networks:
  public:
    driver: overlay
    driver_opts:
      encrypted: 'true'
    attachable: true
  backend-services:
    driver: overlay
    driver_opts:
      encrypted: 'true'
    attachable: true
  database-cluster:
    driver: overlay
    driver_opts:
      encrypted: 'true'
    attachable: true
  consumer-services:
    driver: overlay
    driver_opts:
      encrypted: 'true'
    attachable: true
  queue-cluster:
    driver: overlay
    driver_opts:
      encrypted: 'true'
    attachable: true

volumes:
  db-data:

services:
  database:
    image: postgres:9.6.6
    networks:
      - database-cluster
    volumes:
      - db-data:/var/lib/postgresql/data
    deploy:
      replicas: 1
  #          update_config:
  #              order: 'stop-first'
  #          rollback_config:
  #              order: 'stop-first'
  #          resources:
  #              limits:
  #                cpus: '1.00'
  #                memory: 50M
  #              reservations:
  #                cpus: '0.25'
  #                memory: 50M
  backend:
    image: rodoch/back-end-image:latest
    volumes:
      - /var/log/start-app/backend:/var/log
    networks:
      - backend-services
      - database-cluster
      - queue-cluster
    environment:
      POSTGRES_HOST: 'postgres'
      POSTGRES_PORT: '5432'
      POSTGRES_USER: 'postgres'
    depends_on:
      - database
    deploy:
      replicas: 2
  #          restart_policy:
  #            condition: on-failure
  #            max_attempts: 10
  #            delay: 5s
  #          update_config:
  #            parallelism: 1
  #            delay: 5s
  #          resources:
  #              limits:
  #                cpus: '0.50'
  #                memory: 15M
  #              reservations:
  #                cpus: '0.25'
  #                memory: 15M
  consumer:
    image: rodoch/consumer-service-image:latest
    volumes:
      - /var/log/start-app/consumer-service:/var/log
    networks:
      - consumer-services
      - database-cluster
      - queue-cluster
    environment:
      POSTGRES_HOST: 'postgres'
      POSTGRES_PORT: '5432'
      POSTGRES_USER: 'postgres'
    depends_on:
      - database
    deploy:
      replicas: 2
  frontend:
    image: rodoch/front-end-image:latest
    networks:
      - public
      - consumer-services
      - backend-services
    volumes:
      - /var/log/start-app/frontend:/var/log
    ports:
      - '5000:5000'
    deploy:
      replicas: 2
#  rabbitmq1:
#    image: rodoch/message-queue-image:latest
##    build: ./message-queue
#    hostname: rabbit1
#    environment:
#      - RABBITMQ_ERLANG_COOKIE=SHARED_SECRET_COOKIE
#      - RABBITMQ_DEFAULT_USER=guest
#      - RABBITMQ_DEFAULT_PASS=guest
#    ports:
#      - '5672:5672'
#      - '15672:15672'
#    networks:
#      - queue-cluster
#  rabbitmq2:
#    image: rodoch/message-queue-image:latest
##    build: ./message-queue
#    hostname: rabbit2
#    environment:
#      - RABBITMQ_ERLANG_COOKIE=SHARED_SECRET_COOKIE
#      - RABBITMQ_CLUSTER_NODE=rabbit1
#    depends_on:
#      - rabbitmq1
#    networks:
#      - queue-cluster

  rabbitmq1:
    image: rabbitmq:3-management
    hostname: rabbitmq1
    environment:
      - RABBITMQ_ERLANG_COOKIE=duJLSnUj3nia1n5GZIse6A==
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - queue-cluster
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5